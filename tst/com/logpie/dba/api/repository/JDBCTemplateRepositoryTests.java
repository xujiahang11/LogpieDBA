package com.logpie.dba.api.repository;

import com.logpie.dba.api.annotation.Column;
import com.logpie.dba.api.basic.Model;
import com.logpie.dba.factory.SamplesFactory;
import com.logpie.dba.sample.*;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;
import org.springframework.jdbc.support.KeyHolder;

import java.lang.reflect.Field;
import java.math.BigInteger;
import java.util.Random;

import static org.junit.Assert.*;

@RunWith(PowerMockRunner.class)
@PrepareForTest(JDBCTemplateRepository.class)
public class JDBCTemplateRepositoryTests {

    private JDBCTemplateRepository repository;

    @Before
    public void setUp() {
        PowerMockito.spy(JDBCTemplateRepository.class);
    }

    @Test
    public void testBuildModelWithAutoGeneratedBigIntegerId() throws Exception {
        Model model = SamplesFactory.createSampleModelWithAutoGeneratedId(Column.DataType.BIGINT);
        BigInteger id = new BigInteger(15, new Random());

        buildModel(model, id);
        assertEquals(id, ((SampleModelWithAGBigIntId)model).getId());
    }

    @Test
    public void testBuildModelWithAutoGeneratedLongId() throws Exception {
        Model model = SamplesFactory.createSampleModelWithAutoGeneratedId(Column.DataType.LONG);
        Long id = new Long(10000);

        buildModel(model, id);
        assertEquals(id, ((SampleModelWithAGLongId)model).getId());
    }

    @Test
    public void testBuildModelWithAutoGeneratedIntegerId() throws Exception {
        Model model = SamplesFactory.createSampleModelWithAutoGeneratedId(Column.DataType.INTEGER);
        Integer id = new Integer(100);

        buildModel(model, id);
        assertEquals(id, ((SampleModelWithAGIntId)model).getId());
    }

    @Test
    public void testBuildModelWithStringId() throws Exception {
        Model model = SamplesFactory.createSampleModelWithId(Column.DataType.STRING, "10100");
        assertEquals("10100", ((SampleModelWithStringId)model).getId());
        buildModel(model, null);
        assertEquals("10100", ((SampleModelWithStringId)model).getId());
    }

    @Test
    public void testBuildModelWithAutoGeneratedStringId() throws Exception {
        Model model = new SampleModelWithAGStringId();
        boolean exceptionHappened = false;
        try {
            buildModel(model, null);
        } catch(Exception e) {
            exceptionHappened = true;
        }
        assertTrue(exceptionHappened);
    }

    private void buildModel(Model model, Number id) throws Exception {
        KeyHolder holder = PowerMockito.mock(KeyHolder.class);
        PowerMockito.when(holder.getKey()).thenReturn(id);
        repository = PowerMockito.spy(SamplesFactory.createSampleRepo(model));
        assertNotNull(repository);

        repository.buildModelWithAutoGeneratedIdIfNecessary(model, holder);
    }

}
